{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/list/starships.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Starships';\n  constructor() { }\n}\n","<div>\n  <div class=\"header-image\" >\n    <h1 class=\"main-title\">{{title}}</h1>\n    <app-list></app-list>\n  </div>\n</div>\n<router-outlet></router-outlet>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {ListComponent} from './list/list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {StarshipsService, SearchResponse, Starship} from './starships.service';\n\n\n/**\n * Show the list with the starships with their values and percentage in a barchart\n */\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n  constructor(public json: StarshipsService) { }\n  ships: Array<StarshipData> = [];\n  shipAttribute = '';\n  error = false;\n\n  /**\n   * Launch default search\n   */\n  ngOnInit() {\n    this.requestStarships('hyperdriveRating_DESC');\n  }\n\n  /**\n   * Get data from the API\n   * Check the array contains data, if it doesn't show an error message\n   * Fill staships list with attributes selected by the button\n   * @param orderCriteria : attribute to order\n   */\n  requestStarships(orderCriteria: string) {\n    this.json.getJson('https://swapi-graphql.netlify.app/.netlify/functions/index', orderCriteria).subscribe({\n      next: (starships: SearchResponse ) => {\n        if (starships === undefined || starships === null || starships.data === undefined ||\n                  Â starships.data === null || starships.data.allStarships.starships.length === 0)  {\n          this.error = true;\n        } else {\n          const allStarships: Array<Starship> = starships.data.allStarships.starships;\n          this.setShipAttribute(orderCriteria);\n\n          const maxValue = this.maxAttributeValueByShipAttribute(this.shipAttribute, allStarships);\n          this.ships = allStarships.map((ship: Starship) => {\n            const attribute = this.getAttributeValue(ship);\n            return {\n              name: ship.name,\n              percentage: this.getPercentageProgressValue(maxValue, attribute),\n              attributeValue: attribute\n            } as StarshipData;\n          });\n        }\n      },\n      error: error => {\n        console.error('There was an error!', error);\n        this.error = true;\n      }\n    });\n  }\n\n  /**\n   * Set ship attribute based on the given order criteria at the button checked\n   * @param orderCriteria : attribute to order\n   */\n  setShipAttribute(orderCriteria: string) {\n    switch (orderCriteria) {\n      case 'cargoCapacity_DESC':\n        this.shipAttribute = 'cargoCapacity';\n        break;\n      case 'costInCredits_DESC':\n        this.shipAttribute = 'costInCredits';\n        break;\n      case 'crew_DESC':\n        this.shipAttribute = 'crew';\n        break;\n      case 'hyperdriveRating_DESC':\n        this.shipAttribute = 'hyperdriveRating';\n        break;\n      case 'length_DESC':\n        this.shipAttribute = 'length';\n        break;\n      case 'maxAtmospheringSpeed_DESC':\n        this.shipAttribute = 'maxAtmospheringSpeed';\n        break;\n      default:\n        this.shipAttribute = 'passengers';\n    }\n  }\n\n  /**\n   * Get max value number from the array\n   * @param shipAttribute : attribute name\n   * @param ships : starships array\n   * @return get the max attribute value\n   */\n  maxAttributeValueByShipAttribute(shipAttribute: string, ships: Array<Starship>): number {\n    return Math.max.apply(Math, ships.map( (ship: Starship) => {\n      return ship[shipAttribute];\n    }));\n  }\n\n  /**\n   * Get attribute value or return 0 in case of attributes with default or null value\n   * @param ship : starship data\n   * @return the value of the property in the given ship\n   */\n  private getAttributeValue(ship: Starship): number {\n    if (ship[this.shipAttribute] === null || ship[this.shipAttribute] === undefined) {\n      return 0;\n    } else {\n      return ship[this.shipAttribute];\n    }\n  }\n\n  /**\n   * Get percentage value from the attribute to show in the progress barchart\n   * @param maxValue : max value from the array\n   * @param attributeValue : number of the attribute value\n   * @return the percentage calculated\n   */\n  getPercentageProgressValue(maxValue: number, attributeValue: number): number {\n    if (attributeValue === 0 ||Â maxValue === null ||Â maxValue === undefined || maxValue === 0) {\n      return 0;\n    }\n    return (Math.log10(attributeValue) / Math.log10(maxValue)) * 100;\n  }\n}\n\n/**\n * Assign data type of typescript to object values\n */\nexport interface StarshipData {\n  name: string;\n  percentage: number;\n  attributeValue: number;\n}\n\n\n","<div class=\"content\" *ngIf=\"error === false\">\n    <div class=\"center-content\">\n      <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" (click)=\"requestStarships('cargoCapacity_DESC')\"> Cargo capacity\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" (click)=\"requestStarships('costInCredits_DESC')\"> Cost in credits\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" (click)=\"requestStarships('crew_DESC')\"> Crew\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option4\" (click)=\"requestStarships('hyperdriveRating_DESC')\" checked> Hyperdrive rating\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option5\" (click)=\"requestStarships('length_DESC')\"> Length\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option6\" (click)=\"requestStarships('maxAtmospheringSpeed_DESC')\"> Max atmosphering speed\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option7\" (click)=\"requestStarships('passengers_DESC')\"> Passengers\n        </label>\n      </div>\n    </div>\n\n  <div class=\"container progress-background\" *ngFor=\"let data of ships\">\n    <span class=\"progress-name\">{{data.name}}</span>\n    <div class=\"progress\" style=\"\">\n      <div class=\"progress-bar\" role=\"progressbar\" style=\"width: {{data.percentage}}%\" aria-valuenow=\"90\" aria-valuemin=\"0\" aria-valuemax=\"7400\"></div>\n      <span class=\"right attribute-value\">{{data.attributeValue}}</span>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n<div class=\"error-content\" *ngIf=\"error\">\n  <p class=\"error-message\">I'm sorry. There was an error</p>\n  <div class=\"error-image\"></div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service to get data from the API\n */\nexport class StarshipsService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Search starships making a Post to the API\n   */\n  getJson(url: string, orderCriteria: string) {\n    return this.http.post<SearchResponse>(url, '{ \"query\": \"query { allStarships { starships{ cargoCapacity costInCredits id name crew hyperdriveRating length maxAtmospheringSpeed passengers} }  }\" }', {\n      headers: {\n        'Content-Type' : 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      }\n    });\n  }\n}\n\n/**\n * Define data types to Starship object\n */\nexport interface Starship {\n  id: string;\n  name: string;\n  crew: number;\n  cargoCapacity: number;\n  costInCredits: number;\n  hyperdriveRating: number;\n  length: number;\n  maxAtmospheringSpeed: number;\n  passengers: number;\n}\n\n/**\n *  Define array type to allStarships\n */\nexport interface StarshipsList {\n  allStarships: Starships;\n}\n\n/**\n * Object that contains starships list\n */\nexport interface Starships {\n  starships: Array<Starship>\n}\n\n/**\n * Assign starshipsList to data\n */\nexport interface SearchResponse {\n  data: StarshipsList;\n}\n\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}